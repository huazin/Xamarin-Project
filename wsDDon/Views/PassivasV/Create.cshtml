@model wsDDon.Models.Passivas

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var Job = (IEnumerable<SelectListItem>)TempData["Jobs"];

    var Idioma = new List<SelectListItem>(){
        new SelectListItem(){Value="1",Text="PT-BR"},
        new SelectListItem(){Value="2",Text="USA"},
    };

    var Icone = new List<SelectListItem>(){
        new SelectListItem(){Value="1",Text="Espadas/Flecha"},
        new SelectListItem(){Value="2",Text="Agilidade"},
        new SelectListItem(){Value="3",Text="Aura"},
        new SelectListItem(){Value="4",Text="2 espadas"},
        new SelectListItem(){Value="5",Text="Poder"},
        new SelectListItem(){Value="6",Text="Aventura"},
        new SelectListItem(){Value="7",Text="Setas pra cima"},
        // new SelectListItem(){Value="9",Text=""}, erro 
        new SelectListItem(){Value="8",Text="Concentração"},
        new SelectListItem(){Value="9",Text="icone 9"},
        new SelectListItem(){Value="10",Text="Escudo"},
    };
}

<h2>Nova</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Passivas</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.id_Job, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.id_Job, Job, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.id_Job, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.nome, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.nome, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.nome, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ap, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ap, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ap, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.nivel, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.nivel, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.nivel, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.descricao, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.descricao, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.descricao, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.monster5, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.monster5, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.monster5, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.monster6, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.monster6, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.monster6, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.idiomaId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.idiomaId, Idioma, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.idiomaId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.imagem, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.imagem, Icone, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.imagem, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Cria" class="btn btn-default" />
            </div>
        </div>
    </div>
}
